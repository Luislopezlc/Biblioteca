// <auto-generated />
using Biblioteca.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Biblioteca.Migrations
{
    [DbContext(typeof(AplicationdbContext))]
    [Migration("20220809125156_Exam30")]
    partial class Exam30
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Biblioteca.Modelo.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Fec_nac")
                        .HasColumnType("text");

                    b.Property<string>("Fec_regis")
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Empleados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<string>("Contraseña")
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("FKRol")
                        .HasColumnType("int");

                    b.Property<string>("Fec_nac")
                        .HasColumnType("text");

                    b.Property<string>("Fec_reg")
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FKRol");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Libros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Autor")
                        .HasColumnType("text");

                    b.Property<string>("Categoria")
                        .HasColumnType("text");

                    b.Property<string>("Editorial")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Fec_publi")
                        .HasColumnType("text");

                    b.Property<string>("Idioma")
                        .HasColumnType("text");

                    b.Property<string>("Isbm")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Prestamos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cobro_retardo")
                        .HasColumnType("int");

                    b.Property<int>("FKClientes")
                        .HasColumnType("int");

                    b.Property<int>("FKEmpleados")
                        .HasColumnType("int");

                    b.Property<int>("FKLibros")
                        .HasColumnType("int");

                    b.Property<string>("Fec_devo")
                        .HasColumnType("text");

                    b.Property<string>("Fec_pres")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FKClientes");

                    b.HasIndex("FKEmpleados");

                    b.HasIndex("FKLibros");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Empleados", b =>
                {
                    b.HasOne("Biblioteca.Modelo.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("FKRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Biblioteca.Modelo.Prestamos", b =>
                {
                    b.HasOne("Biblioteca.Modelo.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("FKClientes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Modelo.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("FKEmpleados")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Biblioteca.Modelo.Libros", "Libros")
                        .WithMany()
                        .HasForeignKey("FKLibros")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
